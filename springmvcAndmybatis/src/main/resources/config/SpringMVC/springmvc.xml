<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

    <!--创建springmvc.xml文件，配置处理器映射器、适配器、视图解析器。-->

    <!--可以扫描controller、service  这里让扫描controller，指定controller的包-->

    <context:component-scan base-package="cn.itcast.ssm.controller"></context:component-scan>


    <!--注解映射器-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean>-->

    <!--注解适配器-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean>-->

    <!--静态资源解析器 js、css、img-->
    <mvc:resources mapping="/js/**" location="/js/"></mvc:resources>
    <mvc:resources mapping="/img/**" location="/img/"></mvc:resources>
    <mvc:resources mapping="/css/**" location="/css/"></mvc:resources>


    <!--使用mvc:annotation-driven代替上边的注解映射器、注解适配器

    mvc:annotation-driven默认加载很多的参数绑定方法，
	比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
	实际开发时使用mvc:annotation-driven
	校验器注入到处理器适配器中  validator="validator"
	-->
    <mvc:annotation-driven conversion-service="conversionService" validator="validator"></mvc:annotation-driven>

    <!--全局异常处理器 只要实现HandlerExceptionResolver 接口就是全局异常处理器-->
    <bean class="cn.itcast.ssm.exception.CustomExceptionResolver"></bean>

    <!-- 视图解析器
	解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包
	 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--配置jsp的前缀和后缀-->
        <property name="prefix" value="/WEB-INF/jsp/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--自定义参数绑定-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <!--转换器-->
        <property name="converters">
            <list>
                <!--日期类型转换-->
                <bean class="cn.itcast.ssm.controller.converter.CustomDateConverter"></bean>
            </list>
        </property>
    </bean>

    <!--校验器-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">

        <!--hiberate校验器-->
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
        <!--指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定默认使用classpath下的ValidationMessage.properties-->
        <property name="validationMessageSource" ref="messageSource"></property>
    </bean>
    <!--校验错误配置文件-->
    <!--ResourceBundleMessageSource  是这个文件 不是ReloadableResourceBundleMessageSource-->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <!--资源文件名-->
        <property name="basenames">
            <list>
                <value>config.CustomValidationMessages</value>
            </list>
        </property>

        <!--资源文件编码格式-->
        <property name="defaultEncoding" value="GBK"></property>
        <!--对资源文件内容缓存时间 单位 秒-->
        <property name="cacheSeconds" value="120"></property>
    </bean>

    <!--文件上传-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--设置上传文件的最大尺寸为5M-->
        <property name="maxUploadSize">
            <value>5242880</value>
        </property>
    </bean>

    <!--拦截器-->
    <mvc:interceptors>
        <!--多个拦截器顺序执行-->
        <mvc:interceptor>
            <!--/**/ 表示所有url包括子url路径-->
            <mvc:mapping path="/**/"></mvc:mapping>
             <bean class="cn.itcast.ssm.interceptor.interceptor1"></bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**/"/>
            <bean class="cn.itcast.ssm.interceptor.interceptor2"></bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**/"/>
            <bean class="cn.itcast.ssm.interceptor.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>